# Define the image and container names
IMAGE_NAME=structosarl/dopg-timbrage:latest
CONTAINER_NAME=dopg-timbrage

# Include .env file
include ./.env

# Makefile targets
.PHONY: login stop remove pull run

# Function to display progress bar
define charging_bar
	@i=0; \
	while [ $$i -le 50 ]; do \
		sleep 0.1; \
		chars=$$(($$i * 2)); \
		echo -n "\r[ $${PATTERN_BEGIN:0:$$chars} $$(($$i * 2))% ]"; \
		i=$$(($$i + 1)); \
	done; \
	echo ""
endef

# Login to Docker
login:
	@echo "Checking Docker login status..."
	@AUTH_CHECK=$(jq '.auths | to_entries | length > 0' "$CONFIG_FILE"); \
	if [ "$$AUTH_CHECK" = "true" ]; then \
		echo "Already logged in to Docker"; \
	else \
		echo "Logging in to Docker..."; \
		echo "$(DOCKER_PASSWORD)" | docker login --username "$(DOCKER_USERNAME)" --password-stdin > /dev/null 2>&1; \
		echo "Logged in to Docker."; \
	fi

# Stop the container
stop:
	@echo "Stopping container $(CONTAINER_NAME)..."
	@docker stop $(CONTAINER_NAME) > /dev/null 2>&1 || true

# Remove the container
remove: stop
	@echo "Removing container $(CONTAINER_NAME)..."
	@docker rm $(CONTAINER_NAME) > /dev/null 2>&1 || true
	@echo "Removing image $(IMAGE_NAME)..."
	@docker rmi $(IMAGE_NAME) > /dev/null 2>&1 || true

# Pull the latest image from Docker Hub
pull: login remove
	@echo "Pulling the latest image $(IMAGE_NAME) from Docker Hub..."
	@docker pull $(IMAGE_NAME) > /dev/null 2>&1

# Run the container
run: pull
	@echo "Running container $(CONTAINER_NAME) with image $(IMAGE_NAME)..."
	@docker run --restart unless-stopped -d --name $(CONTAINER_NAME) -p 3000:3000 $(IMAGE_NAME) > /dev/null 2>&1
	$(charging_bar)

# Default target
all: run
